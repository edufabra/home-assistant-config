
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Text to speech
tts:
  - platform: google_translate
    language: 'es'
    base_url: !secret homeassistant_url

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

homeassistant:
  latitude: !secret homeassistant_latitude
  longitude: !secret homeassistant_longitude
  elevation: !secret homeassistant_elevation
  unit_system: metric
  external_url: !secret homeassistant_url
  internal_url: !secret homeassistant_url

http:
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  ip_ban_enabled: true
  login_attempts_threshold: 5

wake_on_lan:

device_tracker:
  - platform: xiaomi
    host: !secret xiaomi_router_ip
    password: !secret xiaomi_router_password
      
webostv:
  host: !secret lg_tv_menjador_ip
  name: TV LG Menjador
  turn_on_action:
    - service: switch.turn_on
      data:
        entity_id: switch.regleta_menjador_darrera_tv_mss425f_switch_2
    - delay:
        seconds: 30
    - service: wake_on_lan.send_magic_packet
      data:
        "mac": !secret lg_tv_menjador_mac
  customize:
    sources:
      - livetv
      - youtube
      - primevideo

media_player:

notify:      
      
input_select:
  sala_maquines_estat_rentadora:
    name: Estat rentadora
    options:
      - Apagada
      - Stand-by
      - Rentant
    initial: Apagada  
    icon: mdi:washing-machine

input_number: !include_dir_named input_number/
input_datetime: !include_dir_named input_datetime/

home_connect:
  client_id: !secret home_connect_client_id
  client_secret: !secret home_connect_client_secret

ble_monitor:
  devices:
    - mac: 'A4:C1:38:F4:51:AC'
      name: 'Despatx'
    - mac: 'A4:C1:38:61:4F:21'
      name: 'Cuina'
    - mac: 'A4:C1:38:D3:06:E3'
      name: 'Arlet'
    - mac: 'A4:C1:38:48:74:A0'
      name: 'Matrimoni'
    - mac: 'A4:C1:38:D3:E8:7F'    
      name: 'Terrassa'
    - mac: 'A4:C1:38:E6:38:B0'
      name: 'Passadis'      

browser_mod:

ifttt:
  key: !secret ifttt_key

sensor:
  - platform: sql
    queries:
      - name: DB Size
        query: 'SELECT ROUND(page_count * page_size / 1024 / 1024, 1) as size FROM pragma_page_count(), pragma_page_size();'
        column: 'size'
        unit_of_measurement: 'MiB'
      - name: yesterday_max_temperature
        query: "SELECT MAX(CAST(state AS float)) AS temperature, strftime('%H:%M', datetime(strftime('%s', last_updated), 'unixepoch', 'localtime')) AS time FROM states WHERE entity_id = 'sensor.ble_temperature_terrassa' and last_updated BETWEEN strftime('%Y-%m-%d 00:00:00', DATETIME('now','-1 day')) AND strftime('%Y-%m-%d 23:59:59', DATETIME('now','-1 day')) and state NOT IN ('unknown','unavailable');"
        column: 'temperature'
        unit_of_measurement: 'ºC'
      - name: yesterday_min_temperature
        query: "SELECT MIN(CAST(state AS float)) AS temperature, strftime('%H:%M', datetime(strftime('%s', last_updated), 'unixepoch', 'localtime')) AS time FROM states WHERE entity_id = 'sensor.ble_temperature_terrassa' and last_updated BETWEEN strftime('%Y-%m-%d 00:00:00', DATETIME('now','-1 day')) AND strftime('%Y-%m-%d 23:59:59', DATETIME('now','-1 day')) and state NOT IN ('unknown','unavailable');"
        column: 'temperature'
        unit_of_measurement: 'ºC'
      - name: today_max_temperature
        query: "SELECT MAX(CAST(state AS float)) AS temperature, strftime('%H:%M', datetime(strftime('%s', last_updated), 'unixepoch', 'localtime')) AS time FROM states WHERE entity_id = 'sensor.ble_temperature_terrassa' and last_updated BETWEEN strftime('%Y-%m-%d 00:00:00', DATETIME('now')) AND strftime('%Y-%m-%d 23:59:59', DATETIME('now')) and state NOT IN ('unknown','unavailable');"
        column: 'temperature'
        unit_of_measurement: 'ºC'
      - name: today_min_temperature
        query: "SELECT MIN(CAST(state AS float)) AS temperature, strftime('%H:%M', datetime(strftime('%s', last_updated), 'unixepoch', 'localtime')) AS time FROM states WHERE entity_id = 'sensor.ble_temperature_terrassa' and last_updated BETWEEN strftime('%Y-%m-%d 00:00:00', DATETIME('now')) AND strftime('%Y-%m-%d 23:59:59', DATETIME('now')) and state NOT IN ('unknown','unavailable');"
        column: 'temperature'
        unit_of_measurement: 'ºC'     