
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Text to speech
tts:
  - platform: google_translate
    language: 'es'
    base_url: !secret homeassistant_url

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

homeassistant:
  latitude: !secret homeassistant_latitude
  longitude: !secret homeassistant_longitude
  elevation: !secret homeassistant_elevation
  unit_system: metric
  external_url: !secret homeassistant_url
  internal_url: !secret homeassistant_url

http:
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  ip_ban_enabled: true
  login_attempts_threshold: 5

wake_on_lan:

device_tracker:
  - platform: xiaomi
    host: !secret xiaomi_router_ip
    password: !secret xiaomi_router_password

webostv:
  host: !secret lg_tv_menjador_ip
  name: TV LG Menjador
  turn_on_action:
    - service: switch.turn_on
      data:
        entity_id: switch.regleta_menjador_darrera_tv_mss425f_switch_2
    - delay:
        seconds: 30
    - service: wake_on_lan.send_magic_packet
      data:
        "mac": !secret lg_tv_menjador_mac
  customize:
    sources:
      - livetv
      - youtube
      - primevideo

media_player:

input_select:
  sala_maquines_estat_rentadora:
    name: Estat rentadora
    options:
      - Apagada
      - Stand-by
      - Rentant
    initial: Apagada
    icon: mdi:washing-machine

home_connect:
  client_id: !secret home_connect_client_id
  client_secret: !secret home_connect_client_secret

ble_monitor:
  devices:
    - mac: 'A4:C1:38:F4:51:AC'
      name: 'Despatx'
    - mac: 'A4:C1:38:61:4F:21'
      name: 'Cuina'
    - mac: 'A4:C1:38:D3:06:E3'
      name: 'Arlet'
    - mac: 'A4:C1:38:48:74:A0'
      name: 'Matrimoni'
    - mac: 'A4:C1:38:D3:E8:7F'
      name: 'Terrassa'
    - mac: 'A4:C1:38:E6:38:B0'
      name: 'Passadis'

browser_mod:

ifttt:
  key: !secret ifttt_key

sensor:
  - platform: sql
    db_url: !secret recorder_db_url
    scan_interval: 3600
    queries:
      - name: DB Size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: 'MB'
  - platform: sql
    db_url: !secret recorder_db_url
    scan_interval: 10800
    queries:
      - name: yesterday_max_temperature
        query: 'SELECT state AS temperature, DATE_FORMAT(CONVERT_TZ(last_updated, "UTC", "Europe/Andorra"), "%H:%i") AS time FROM states WHERE entity_id = "sensor.ble_temperature_terrassa" and DATE(last_updated) = SUBDATE(CURDATE(), 1) and state NOT IN ("unknown","unavailable") GROUP BY state ORDER BY CAST(state AS float) DESC LIMIT 1;'
        column: 'temperature'
        unit_of_measurement: 'ºC'
      - name: yesterday_min_temperature
        query: 'SELECT state AS temperature, DATE_FORMAT(CONVERT_TZ(last_updated, "UTC", "Europe/Andorra"), "%H:%i") AS time FROM states WHERE entity_id = "sensor.ble_temperature_terrassa" and DATE(last_updated) = SUBDATE(CURDATE(), 1) and state NOT IN ("unknown","unavailable") GROUP BY state ORDER BY CAST(state AS float) ASC LIMIT 1;'
        column: 'temperature'
        unit_of_measurement: 'ºC'
  - platform: sql
    db_url: !secret recorder_db_url
    scan_interval: 300
    queries:
      - name: today_max_temperature
        query: 'SELECT state AS temperature, DATE_FORMAT(CONVERT_TZ(last_updated, "UTC", "Europe/Andorra"), "%H:%i") AS time FROM states WHERE entity_id = "sensor.ble_temperature_terrassa" and DATE(last_updated) = CURDATE() and state NOT IN ("unknown","unavailable") GROUP BY state ORDER BY CAST(state AS float) DESC LIMIT 1;'
        column: 'temperature'
        unit_of_measurement: 'ºC'
      - name: today_min_temperature
        query: 'SELECT state AS temperature, DATE_FORMAT(CONVERT_TZ(last_updated, "UTC", "Europe/Andorra"), "%H:%i") AS time FROM states WHERE entity_id = "sensor.ble_temperature_terrassa" and DATE(last_updated) = CURDATE() and state NOT IN ("unknown","unavailable") GROUP BY state ORDER BY CAST(state AS float) ASC LIMIT 1;'
        column: 'temperature'
        unit_of_measurement: 'ºC'

  - platform: edistribucion
    username: !secret e_distribucion_user_name
    password: !secret e_distribucion_password
    short_interval: 10
    long_interval: 60
    explode_sensors:
      - energy_total # total counter energy in kWh
      - power_limit_p1 # power limit (P1) in kWh
      - power_limit_p2 # power limit (P2) in kWh
      - power # immediate power in kWh
      - energy_today # energy estimation for today in kWh
      - energy_yesterday # energy consumed yesterday in kWh (it may require a few hours to reflect the accumulated energy)
      - energy_yesterday_p1 # same for p1 phase
      - energy_yesterday_p2 # same for p2 phase
      - energy_yesterday_p3 # same for p3 phase
      - cycle_current # energy estimation for current billing cycle in kWh (it may require a few hours to reflect the accumulated energy)
      - cycle_current_p1 # same for p1 phase
      - cycle_current_p2 # same for p2 phase
      - cycle_current_p3 # same for p3 phase
      - cycle_current_daily # daily average
      - cycle_current_days # days in the cycle
      - cycle_current_pvpc # pvpc cost simulation
      - cycle_last # energy estimation for the last billing cycle in kWh (it may require a few hours to reflect the accumulated energy)
      - cycle_last_p1 # same for p1 phase
      - cycle_last_p2 # same for p2 phase
      - cycle_last_p3 # same for p3 phase
      - cycle_last_daily # daily average
      - cycle_last_days # days in the cycle
      - cycle_last_pvpc # pvpc cost simulation (only w/ 2.0TD; no data before 1-jun-2021 will be calculated)
      - power_peak # highest power peak in kW during the last 12 months
      - power_peak_mean # mean of monthly power peaks in kW during the last 12 months
      - power_peak_tile90 # percentile 90 of monthly power peaks in kW during the last 12 month

  - platform: template
    sensors:
      electricity_cost_per_hour:
        friendly_name: "Trams Horaris Cost Llum"
        value_template: >-
          {% if is_state('binary_sensor.workday_sensor', 'off') %}
            Hora Vall
          {% else %}
            {% set current_hour = now().hour %}
            {% if 0 <= current_hour < 8 %}
              Hora Vall
            {% elif 8 <= current_hour < 10 %}
              Hora Plana
            {% elif 10 <= current_hour < 14 %}
              Hora Punta
            {% elif 14 <= current_hour < 18 %}
              Hora Plana
            {% elif 18 <= current_hour < 22 %}
              Hora Punta
            {% else %}
              Hora Plana
            {% endif %}
          {% endif %}

binary_sensor:
  - platform: workday
    country: ES

google_assistant: !include google_assistant.yaml

shell_command: !include shell_command/shell_commands.yaml

recorder:
  purge_keep_days: 90
  db_url: !secret recorder_db_url

telegram_bot:
  platform: polling
  api_key: !secret telegram_bot_api_key
  allowed_chat_ids:
    - !secret telegram_bot_chat_id_eduard
notify:
  - name: telegram_text_message_eduard
    platform: telegram
    chat_id: !secret telegram_bot_chat_id_eduard
  - name: telegram_voice_call_eduard
    platform: rest
    resource: https://api.callmebot.com/start.php
    data:
      source: HA
      user: !secret telegram_voice_call_username_eduard
      lang: ca-es-Standard-A
      rpt: 2

input_boolean: !include_dir_named input_boolean/
